import com.bmuschko.gradle.docker.tasks.image.Dockerfile

/*
 * Copyright (c) 2020 Informatics Matters Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

plugins {
    id 'com.bmuschko.docker-remote-api'
}

description = 'Fragment network depiction'

apply plugin: 'war'
apply plugin: 'groovy'
apply plugin: 'com.bmuschko.tomcat'

dependencies {
    
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'

    def cdkVersion = '2.3'
    def tomcatVersion = '8.5.43'

    compile "org.openscience.cdk:cdk-core:$cdkVersion"
    compile "org.openscience.cdk:cdk-data:$cdkVersion"
    compile "org.openscience.cdk:cdk-silent:$cdkVersion"
    compile "org.openscience.cdk:cdk-io:$cdkVersion"
    compile "org.openscience.cdk:cdk-ioformats:$cdkVersion"
    compile "org.openscience.cdk:cdk-smiles:$cdkVersion"
    compile "org.openscience.cdk:cdk-renderbasic:$cdkVersion"
    compile "org.openscience.cdk:cdk-renderawt:$cdkVersion"
    compile "org.openscience.cdk:cdk-depict:$cdkVersion"
    compile "org.openscience.cdk:cdk-smsd:$cdkVersion"
    compile "org.openscience.cdk:cdk-legacy:$cdkVersion"
    
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"


    testCompile "org.codehaus.groovy:groovy-all:2.5.7"
    testCompile "org.spockframework:spock-core:1.3-groovy-2.5"
}

tomcat {
    enableSSL = false
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'
}

task buildDockerFile(type: Dockerfile) {

    dependsOn = [
            war
    ]

    destFile = project.file('build/Dockerfile')
    from "informaticsmatters/tomcat:8.5-jre11"
    label(['maintainer': 'Tim Dudgeon "tdudgeon@informaticsmatters.com"'])

    // no need to unpack the zip
    addFile('./libs/fragnet-depict*.war', "/usr/local/tomcat/webapps/fragnet-depict.war")
}

/** Build a Docker image
 * run the generated image with something like this:
 *
 * docker run -d --name fragnet-depict -p 8080:8080 squonk/fragnet-depict:latest
 *
 */
task buildDockerImage(type: DockerBuildImage, dependsOn: buildDockerFile) {
    inputDir = buildDockerFile.destFile.get().asFile.parentFile
    tags.add("squonk/fragnet-depict:${dockerImageTag}")
}