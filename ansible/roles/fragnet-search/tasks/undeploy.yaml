---

# Un-deploy (uninstall) Fragnet Search.
#
# USE with EXTREME caution.

- name: Delete Fragnet Search?
  pause:
    prompt: |-
      Delete Fragnet Search from {{ oc_master_hostname }}?
      Press return to continue.
      Press Ctrl+c and then "a" if you've changed your mind

- name: Login (user)
  command: oc login https://{{ oc_master_hostname }} -u {{ oc_user }} -p {{ oc_user_password }}
  changed_when: False

# To un-deploy Fragnet Search, the fastest way is to
# simply delete the project.

- name: Get Projects
  command: oc get projects
  register: projects_result
  changed_when: False

- name: Delete Fragnet Search Project
  command: oc delete project/{{ fs_project }}
  when: projects_result.stdout|regex_search('^%s\s.*Active$' % fs_project, multiline=True)

- name: Wait for Fragnet Search project deletion
  command: oc get projects
  register: pj_cmd
  retries: 20
  delay: 30
  until: not pj_cmd.stdout|regex_search('^%s\s' % fs_project, multiline=True)
  changed_when: False

# Clean-up the infrastructure

#- name: Get Fragent Search Keycloak Client ID
#  uri:
#    url: "{{ oc_keycloak_server_url }}/admin/realms/{{ oc_keycloak_realm }}/clients?clientId={{ fs_keycloak_client_id }}"
#    headers:
#      Authorization: bearer {{ keycloak_token }}
#  register: fs_client_result

#- name: Delete Fragent Search Keycloak Client
#  uri:
#    url: "{{ oc_keycloak_server_url }}/admin/realms/{{ oc_keycloak_realm }}/clients/{{ fs_client_result.json[0].id }}"
#    method: DELETE
#    status_code: 204
#    headers:
#      Authorization: bearer {{ keycloak_token }}
#  when: fs_client_result.json

- name: Login (admin)
  command: oc login https://{{ oc_master_hostname }} -u {{ oc_admin }} -p {{ oc_admin_password }}
  changed_when: False

- name: Move to Infrastructure Project
  command: oc project {{ oc_infra_project }}
  changed_when: False

- name: Get jobs
  command: oc get jobs
  register: job_result
  changed_when: False

- name: Delete Jobs
  command: oc delete job/{{ item }}
  loop:
  - client-creator
  when: job_result.stdout | regex_search('^%s\s' % item, multiline=True)

- name: Wait for Jobs to Terminate
  command: oc get jobs
  register: j_cmd
  delay: 10
  retries: "{{ (oc_pod_terminate_timeout | int / 10) | int }}"
  until: not j_cmd.stdout | regex_search('^%s\s' % item, multiline=True)
  loop:
  - client-creator
  changed_when: False

- name: Get ConfigMaps
  command: oc get configmaps
  register: cm_result
  changed_when: False

- name: Delete ConfigMaps
  command: oc delete cm/{{ item }}
  loop:
  - client-creator
  when: cm_result.stdout|regex_search('^%s\s' % item, multiline=True)

