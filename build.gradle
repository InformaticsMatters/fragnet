/*
 * Copyright (c) 2019 Informatics Matters Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

description = 'Fragment Network tools and services'

version = '0.3.2'

apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.5'
        classpath 'com.bmuschko:gradle-docker-plugin:4.2.0' // needs gradle >= 2.5

        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.2.0'
    }
}

allprojects {

    group = 'org.squonk.fragnet'

    apply plugin: 'java'

    sourceCompatibility = 1.8

    project.ext.set('camelVersion', '2.23.0')
    // look at the jackson2-version property here (with correct tag) to get the right Jackson version
    // https://github.com/apache/camel/blob/master/parent/pom.xml
    project.ext.set('jacksonVersion', '2.9.7')
    project.ext.set('groovyVersion', '2.5.5')
    project.ext.set('weldVersion', '3.0.5.Final')

    // In this section you declare where to find the dependencies of your project
    repositories {
        jcenter()
    }

    // In this section you declare the dependencies for your production and test code
    dependencies {
        compile 'org.slf4j:slf4j-jdk14:1.7.25'

        // Spock for unit testing
        testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"
        testCompile "org.spockframework:spock-core:1.2-groovy-2.5"
    }

}

project.ext.set('dockerHost', getDockerHost())
project.ext.set('dockerCertPath', System.env.DOCKER_CERT_PATH ? file(System.env.DOCKER_CERT_PATH) : null)

String getDockerHost() {
    String h = System.getenv('DOCKER_HOST') ?: 'unix:///var/run/docker.sock'
    return h
}

wrapper {
    gradleVersion = '4.10.3'
}

docker {
    url = dockerHost
    certPath = null
}

task copyKeycloakJarsFiles(type: Copy) {
    from "./lib/keycloak-2.1.0-jars-tomcat8"
    into "build/libs/keycloak-2.1.0-jars-tomcat8/"
    include "*.jar"
}

task copyFragnetSearchWarFiles(type: Copy) {
    dependsOn = [
            'fragnet-search:war'
    ]
    from "./fragnet-search/build/libs/"
    into "build/libs/"
    include "fragnet-search.war"
}

task copyFragnetDepictWarFiles(type: Copy) {
    dependsOn = [
            'fragnet-depict:war'
    ]
    from "./fragnet-depict/build/libs/"
    into "build/libs/"
    include "fragnet-depict.war"
}

task buildDockerFile(type: Dockerfile) {

    dependsOn = [
            copyFragnetSearchWarFiles,
            copyFragnetDepictWarFiles,
            copyKeycloakJarsFiles
    ]

    destFile = project.file('build/Dockerfile')
    from "informaticsmatters/rdkit-tomcat-debian:Release_2019_03"
    label(['maintainer': 'Tim Dudgeon "tdudgeon@informaticsmatters.com"'])

    // include the keycloak adapters
    runCommand('''mkdir keycloak && cd keycloak && curl -s -o keycloak.tar.gz\
 https://downloads.jboss.org/keycloak/3.4.3.Final/adapters/keycloak-oidc/keycloak-tomcat8-adapter-dist-3.4.3.Final.tar.gz &&\
 tar xfz keycloak.tar.gz &&\
 rm keycloak.tar.gz &&\
 mv *.jar $CATALINA_HOME/lib &&\
 cd $CATALINA_HOME && rm -rf keycloak''')

    addFile('./libs/fragnet-*.war', "/usr/local/tomcat/webapps/")
    runCommand("cd /usr/local/tomcat/webapps && " +
            "unzip -d fragnet-search fragnet-search.war && " +
            "unzip -d fragnet-depict fragnet-depict.war && " +
            "rm fragnet-*.war")

    // this bit handles the conflicting jars in lib and webapps/fragnet-search/WEB-INF/lib.
    // the old ones in lib are removed and the correct ones moved from the webapp lib dir to the tomcat lib dir.
    runCommand('''rm $CATALINA_HOME/lib/jackson* $CATALINA_HOME/lib/jboss-logging* &&\
mv $CATALINA_HOME/webapps/fragnet-search/WEB-INF/lib/jackson-core*.jar \
$CATALINA_HOME/webapps/fragnet-search/WEB-INF/lib/jackson-annotations*.jar \
$CATALINA_HOME/webapps/fragnet-search/WEB-INF/lib/jackson-databind*.jar \
$CATALINA_HOME/webapps/fragnet-search/WEB-INF/lib/jboss-logging*.jar \
$CATALINA_HOME/lib/''')

}

/** Build a Docker image
 * run the generated image with something like this:
 *
 * docker run -d --name fragnet-search -p 8080:8080 squonk/fragnet-search:latest
 *
 */
task buildDockerImage(type: DockerBuildImage, dependsOn: buildDockerFile) {
    inputDir = buildDockerFile.destFile.get().asFile.parentFile
    tags.add("squonk/fragnet-search:latest")
    if (!version.endsWith('-SNAPSHOT')) {
        tags.add("squonk/fragnet-search:${version}")
    }
}


