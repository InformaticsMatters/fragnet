---

# The user is required to define the graph build "combination"
# on the command-line forcing the user to define it before the Role
# can progress, e.g. with something like "-e combination=1".
#
# The combination is the combination build that is
# expected to reside in the 's3_fragnet_bucket' combination directory.
# The combination is a tag that is expected to be in the combination catalogue,
# a tab-separated text file in the 's3_fragnet_bucket' directory.
#
# All files in the S3 bucket for the combination are downloaded
# to the graph database ready for import.

# -----------------------------------------------------------------------------

# AWS variables...
# ---

# The user is expected to have defined AWS credentials on the control machine
# (the machine the playbook is run on, not the host being modified)
# and other AWS-specific environment variables, namely: -
#
# - AWS_ACCESS_KEY
# - AWS_SECRET_KEY
# - AWS_REGION
#
# We read them here to ensure that the playbook does not progress
# unless the user has been explict about the region 9especially).

aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
aws_region: "{{ lookup('env', 'AWS_DEFAULT_REGION') }}"

# The Fragnet bucket (where the graph "combinations" are located)
s3_fragnet_bucket: im-fragnet

# Graph (neo4j) variables...
# -----

# The graph loader, database (graph) and log directories.
# The loader is where the graph combination files are downloaded to
# This also acts as the neo4j volume mount.
graph_name: molport
graph_directories:
  molport:
    graph_loader_directory: /neo4j/loader
    graph_db_directory: /neo4j/graph
    graph_log_directory: /neo4j/log
  hts:
    graph_loader_directory: /neo4j/loader-hts
    graph_db_directory: /neo4j/graph-hts
    graph_log_directory: /neo4j/log-hts

# The graph origin type (it's either a 'combination' or a 'build')
graph_origin: combination

# The default (neo4j) password
graph_password: "{{ lookup('env', 'NEO4J_PASSWORD') }}"
# The import/loader script
graph_loader_script: load-neo4j.sh
# THhe InformaticsMatters Graph version
graph_version: 3.5.2
# Do we wait for the graph DB before continuing?
wait_for_graph: yes
# And the time to wait?
# This is used when the DB restarts, not during the initial import.
minutes_to_wait_for_graph: 60

# Fragnet application variables...
# -------

# The Docker image tag for the 'squonk/fragnet-search' image.
fragnet_tag: latest
# The port to expose the Fragnet service on.
# Internally the port is expected to be on 8080,
# this is the port Fragnet is mapped to on the host.
fragnet_port: 8080
# A username and password (generally for tests)
fragnet_username: "{{ lookup('env', 'FRAGNET_USERNAME') }}"
fragnet_password: "{{ lookup('env', 'FRAGNET_PASSWORD') }}"

# Keycloak variables...
# --------

# Keycloak material that's expected by the
# 'keycloak.json' file mounted in the fragnet-search container.
# This dynamic/sensitive material is expected to be made available
# as environment variables. See the orchestration/setenv-template file.
keycloak_server_url: "{{ lookup('env', 'KEYCLOAK_SERVER_URL') }}"
keycloak_public_key: "{{ lookup('env', 'KEYCLOAK_PUBLIC_KEY') }}"
keycloak_secret: "{{ lookup('env', 'KEYCLOAK_SECRET') }}"
