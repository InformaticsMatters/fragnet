---

# Has the user defined suitable key variables?

- name: Assert definition of graph PageCache Size
  fail:
    msg: "{{ msg.split('\n') }}"
  vars:
    msg: |-
      You must define the 'graph_pagecache_size_g' varibale.
      Re-run adding '-e graph_pagecache_size_g=N' where N is
      the required size in GigaBytes
  when: graph_pagecache_size_g == 'SetMe'

- name: Assert neo4j password
  fail:
    msg: You must provide a neo4j password
  when: graph_password == ''

- include_tasks: set-database-facts.yaml

- name: Copy cypher-script
  copy:
    src: graph/{{ graph_cypher_script }}
    dest: "{{ graph_cypher_script_path }}/cypher.script"
  when:
  - graph_cypher_script is defined
  - graph_cypher_script|length > 0

- name: Start graph container
  docker_container:
    name: graph
    image: "{{ graph_image }}:{{ graph_version }}"
    published_ports:
    - 7474:7474
    - 7687:7687
    env:
      NEO4J_AUTH: neo4j/{{ graph_password }}
      NEO4J_dbms_memory_pagecache_size: "{{ graph_pagecache_size_g }}G"
      NEO4J_dbms_memory_heap_initial__size: "{{ graph_heap_g }}G"
      NEO4J_dbms_memory_heap_max__size: "{{ graph_heap_g }}G"
      NEO4J_dbms_directories_data: /data
      NEO4J_dbms_directories_logs: /neo4j/log
      NEO4J_dbms_connector_bolt_advertised__address: "{{ inventory_hostname }}:7687"
      NEO4J_EDITION: community
      IMPORT_DIRECTORY: /data-loader
      IMPORT_TO: graph
      EXTENSION_SCRIPT: /data-loader/{{ graph_loader_script }}
    volumes:
    - "{{ graph_loader_path }}:/data-loader:Z"
    - "{{ graph_db_path }}:/data:Z"
    - "{{ graph_log_path }}:/neo4j/log:Z"
    - "{{ graph_cypher_script_path }}:/cypher-script:Z"
    restart_policy: "{{ graph_restart_policy }}"
  become: yes

# Optionally wait for the graph database.
# The graph DB can take a lot of time to initialise
# so this step can be avoided by clearing 'wait_for_graph'.
#
# If you don't wait here you will still need to wait
# for the database port before it can actually be used.

- name: Wait for graph
  wait_for:
    host: "{{ inventory_hostname }}"
    port: 7474
    delay: 20
    sleep: 20
    timeout: "{{ minutes_to_wait_for_graph|int * 60 }}"
  when: wait_for_graph|bool
