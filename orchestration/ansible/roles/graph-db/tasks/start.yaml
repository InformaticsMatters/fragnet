---

# Has the user defined suitable key variables?

- name: Assert keycloak variables
  fail:
    msg: "You must provide 'keycloak' variables"
  when: keycloak_server_url == ''

# Launches the Graph DB (neo4j in this case)
# using the loader directory as an input.
# The graph DB is built locally on the cluster
# by the build task in the 'prepare.yaml' play.
#
# The 'import_dir' is the one referred to in the import script

- name: Start graph container
  docker_container:
    name: graph
    image: informaticsmatters/neo4j:stable
    published_ports:
    - 7474:7474
    - 7687:7687
    env:
      NEO4J_AUTH: neo4j/x
      NEO4J_dbms_memory_pagecache_size: 20G
      NEO4J_dbms_memory_heap_initial__size: 8G
      NEO4J_dbms_memory_heap_max__size: 8G
      NEO4J_dbms_directories_data: "{{ graph_db_directory }}"
      NEO4J_dbms_directories_logs: "{{ graph_log_directory }}"
      NEO4J_dbms_connector_bolt_advertised__address: "{{ inventory_hostname }}:7687"
      NEO4J_EDITION: community
      EXTENSION_SCRIPT: "{{ import_dir }}/{{ graph_loader_script }}"
    volumes:
    - "{{ graph_loader_directory }}:{{ import_dir }}:Z"
    - "{{ graph_db_directory }}:{{ graph_db_directory }}:Z"
    - "{{ graph_log_directory }}:{{ graph_log_directory }}:Z"
  vars:
    import_dir: /data-loader
  when: not skip_graph|bool
  become: yes

# Optionally wait for the graph database.
# The graph DB can take a lot of time to initialise
# so this step can be avoided by clearing 'wait_for_graph'.
#
# If you don't wait you will still need to wait to use the DB
# until neo has finished initialising.

- name: Wait for graph
  wait_for:
    host: "{{ inventory_hostname }}"
    port: 7474
    delay: 10
    sleep: 20
    timeout: "{{ seconds_to_wait_for_graph }}"
  when:
  - not skip_graph|bool
  - wait_for_graph|bool

# Start the fragnet-search container
#Â (currently on the same node as the graph DB).
# We 'always' pull the images (this is not OpenShift after all)

- name: Start fragnet container
  docker_container:
    name: fragnet-search
    image: squonk/fragnet-search:{{ fragnet_tag }}
    pull:
      yes
    published_ports:
    - "{{ fragnet_port }}:8080"
    env:
      NEO4J_SERVER: "{{ inventory_hostname }}"
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: "{{ graph_password }}"
      KEYCLOAK_SERVER_URL: "{{ keycloak_server_url }}"
      KEYCLOAK_PUBLIC_KEY: "{{ keycloak_public_key }}"
      KEYCLOAK_SECRET: "{{ keycloak_secret }}"
      CATALINA_OPTS: >-
        -Dkeycloak.baseurl=$KEYCLOAK_SERVER_URL
        -Dkeycloak.publickey=$KEYCLOAK_PUBLIC_KEY
        -Dkeycloak.secret=$KEYCLOAK_SECRET
    volumes:
    - "./fragnet/logging.properties:/usr/local/tomcat/conf/logging.properties:ro,Z"
    - "./fragnet/keycloak.json:/usr/local/tomcat/webapps/fragnet-search/WEB-INF/keycloak.json:ro,Z"
    - "./fragnet/web.xml:/usr/local/tomcat/webapps/fragnet-search/WEB-INF/web.xml:ro,Z"
    - "./fragnet/context.xml:/usr/local/tomcat/webapps/fragnet-search/META-INF/context.xml:ro,Z"
  become: yes
